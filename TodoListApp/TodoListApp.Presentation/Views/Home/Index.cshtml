@model TodoListApp.Application.Users.DTO.MainPanelDto
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    
    <div class="row">

        <div id="sideMenu" class="col-3">
            @if (!Model.Categories.Any())
            {
                <span>There are no categories</span>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var category in Model.Categories)
                    {
                        <li class="d-flex d-block mt-2 shadow rounded">
                            <button class="btn btn-light w-100 h-100" value="@category.Key">@category.Value</button>   
                        </li>
                    }
                </ul>
            }

            <hr />
            <form>
                <div class="d-flex justify-content-center">
                    <button class="btn btn-dark" type="submit">New Category</button>
                </div>   
            </form>
        </div>

        <div id="dynamicContent" class="col">
            <ul class="list-group">
                @foreach (var task in Model.Tasks)
                {
                <li class="list-group-item bg-light mt-2">
                    <div class="row">
                        <div class="col-sm-4">
                            <text>@task.TaskName</text>
                        </div>
                        <div class="col-sm">
                            @{
                                switch (task.Priority)
                                {
                                    case TodoListApp.Core.Domain.PriorityLevel.Low:
                                        <i class="fas fa-2x fa-circle"></i>
                                        <i class="far fa-2x fa-circle"></i>
                                        <i class="far fa-2x fa-circle"></i>
                                        break;
                                    case TodoListApp.Core.Domain.PriorityLevel.Medium:
                                        <i class="fas fa-2x fa-circle"></i>
                                        <i class="fas fa-2x fa-circle"></i>
                                        <i class="far fa-2x fa-circle"></i>
                                        break;
                                    <i class="fas fa-2x fa-circle"></i>
                                    <i class="fas fa-2x fa-circle"></i>
                                    <i class="fas fa-2x fa-circle"></i>
                                    case TodoListApp.Core.Domain.PriorityLevel.High:
                                        break;
                                }
                            }
                        </div>
                        <div class="col-sm text-center">
                            @{
                                if (task.PredictedBestBeforeDateExceeded)
                                {
                                    <i class="fas fa-2x fa-hourglass-end text-danger"></i>
                                }
                                else
                                {
                                    <i class="fas fa-2x fa-hourglass-start text-success"></i>
                                }
                            }
                        </div>
                        <div class="col-sm justify-content-center">
                            <button class="btn btn-dark">Details</button>
                        </div>
                    </div>
                </li>
                }
            </ul>
        </div>

    </div>

</div>
